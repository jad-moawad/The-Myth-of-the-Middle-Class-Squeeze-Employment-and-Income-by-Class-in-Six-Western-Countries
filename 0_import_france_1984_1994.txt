################################################################################################################# Authors: Jad Moawad & Daniel Oesch##### Project: The Myth of the Middle Class Squeeze: Employment and Income by Class in Six Western Countries, 1980-2020##### Data: 	Luxembourg Income Study (LIS)############################################################################################################# The Luxembourg Income Study (LIS) database contains data for France dating back to 1984. # To access this data, you need to run the provided code and save the output to a designated # folder under your name, which LIS will provide. Be sure to modify the directory path in # the last two lines of the code before running it.library(dplyr)         library(readstata13)        library(forcats)     read_LIS.LIS <- function(cc,yy,uu,hbs,labels, ...) read.dta13(paste(LIS_DIR,cc,yy,'i',uu,hbs,'.dta',sep=''), convert.factors=labels, encoding = "UTF-8", ...)     read_LIS.data <- read_LIS.LIS     read_LIS <- function(ccyyuu, labels=TRUE, vars=NULL, subset=NULL) {       dlist  <- list.files(path=LIS_DIR)       dlist  <- tolower(gsub('.dta','',dlist))       ccyyuu <- tolower(ccyyuu)         idparse <- '^([a-z]{2,3})([0-9]{2,4})([a-z]{1,3})((_hbs)?)'       ccset   <- unique(gsub(idparse, '\\1', dlist))       yyset   <- unique(gsub(idparse, '\\2', dlist))       uuset   <- unique(gsub(idparse, '\\3', dlist))       hbs_set <- unique(gsub(idparse, '\\4', dlist))         cc <- gsub(idparse, '\\1', ccyyuu)       yy <- gsub(idparse, '\\2', ccyyuu)       uu <- gsub(idparse, '\\3', ccyyuu)       hbs <- gsub(idparse, '\\4', ccyyuu)         if(!(all(         paste(cc,yy,hbs,sep='') %in% gsub('^([a-z]{2,3}[0-9]{2,4})[a-z]{1,2}', '\\1', dlist)        ) )){         stop("Invalid country/year identifier")       }        if(length(unique(uu))>1) stop("Cannot stack incompatible datasets")         dataload <- function(x,labels,vars,subset) {         print(paste("Loading dataset ",paste(x,collapse=""),"...",sep=""))         res <- read_LIS.data(cc = x[1],yy = x[2], uu = x[3], hbs = x[4],labels = labels)         if(!is.null(subset)) res <- res[with(res,eval(parse(text=subset))),]         if(!is.null(vars)) { ifelse(length(vars)==1,res <- res[vars],res <- res[,vars])}         return(res)       }         data <- do.call(rbind,apply(data.frame(cc,yy,uu,hbs),1,function(x) dataload(x,labels,vars,subset)))         data     }     library(dplyr)         library(readstata13)        library(forcats)       get_stack <- function(datasets, varp, varh, subset) {          pp <- read_LIS(paste(datasets, 'p_hbs', sep = ''), labels = F, vars = varp, subset = subset)                   hh <- read_LIS(paste(datasets, 'h_hbs', sep = ''), labels = F, vars = varh)                   df <- merge(pp, hh, by = c("dname", "hid"))                   return(df)                 }                 #------------------------------ RUN SCRIPTS -----------------------------                 # Household variables               varh <- c('hid','did','dname','hilabour','dhi','year','nhhmem','hwgt')               # Resondents variable               varp <- c('hid', 'dname', 'age', 'sex', 'relation', 'occb1','status1','occ1_c','educ','educ_c')               subset <- 'age >= 25 & age <= 60'                # These are all the previous modules: c('fr78','fr84','fr89','fr94','fr00','fr05','fr10').# But we'll limit the extraction to the modules before 1996, where the new French data in LIS begin. # The 1978 module has inconsistent data on occupation and is therefore dropped.    datasets <- c('fr84','fr89','fr94')    df <- get_stack(datasets, varp, varh, subset)                 df$cntry = df$dname           df$cntry=fct_collapse(df$cntry,FR=c('fr84','fr89','fr94'))# Construct the file path for saving the dataset
# save.dta13(df,paste(USR_DIR,"/path/to/your/directory", sep = ""), version = 117,convert.factors=TRUE)                      
# df <-read.dta13(paste(USR_DIR, "/path/to/your/directory", sep=""),convert.factors=TRUE)   

# Example - Construct the file path for saving the dataset
save.dta13(df,paste(USR_DIR,"/jmoawa/france_old.dta", sep = ""), version = 117,convert.factors=TRUE)                 
df <-read.dta13(paste(USR_DIR, "/jmoawa/france_old.dta", sep=""),convert.factors=TRUE)           
   
str(df)